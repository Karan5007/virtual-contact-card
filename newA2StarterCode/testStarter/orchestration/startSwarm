#!bin/bash

#!/bin/bash

# Usage message
if [ "$#" -lt 2 ]; then
    echo "Usage: $0 MANAGER_IP WORKER_IP1 WORKER_IP2 ..."
    exit 1
fi

# Read IPs from arguments
MANAGER_IP=$1
WORKER_IPS="${@:2}"

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "Docker is not installed on this node. Please install Docker first."
    exit 1
fi

# Initialize Docker Swarm on the manager
echo "Initializing Docker Swarm on the manager node (IP: $MANAGER_IP)..."
docker swarm init --advertise-addr "$MANAGER_IP"

if [[ $? -ne 0 ]]; then
    echo "Failed to initialize Docker Swarm. Exiting."
    exit 1
fi

# Get the worker join token
WORKER_TOKEN=$(docker swarm join-token worker -q)
if [[ -z "$WORKER_TOKEN" ]]; then
    echo "Failed to retrieve the worker join token. Exiting."
    exit 1
fi

echo "Docker Swarm initialized successfully."
echo "Worker join token: $WORKER_TOKEN"

# Function to SSH into worker nodes and join them to the Swarm
join_worker_nodes() {
    for WORKER_IP in $WORKER_IPS; do
        echo "Configuring worker node at $WORKER_IP..."
        ssh -o StrictHostKeyChecking=no "$WORKER_IP" "
            if ! command -v docker &> /dev/null; then
                echo 'Docker is not installed on $WORKER_IP. Please install Docker first.'
                exit 1
            fi
            docker swarm join --token $WORKER_TOKEN $MANAGER_IP:2377
            if [[ \$? -ne 0 ]]; then
                echo 'Failed to join worker node at $WORKER_IP. Please check connectivity and token.'
                exit 1
            fi
        "
        if [[ $? -eq 0 ]]; then
            echo "Worker node at $WORKER_IP successfully joined the Swarm."
        else
            echo "Failed to configure worker node at $WORKER_IP."
        fi
    done
}

# Join worker nodes to the Swarm
join_worker_nodes

# Display the cluster nodes
echo "Docker Swarm cluster setup complete!"
docker node ls