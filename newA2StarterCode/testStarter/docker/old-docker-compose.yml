version: "3"
services:
  web:
    image: python-app
    deploy:
      replicas: 1 
      restart_policy:
        condition: on-failure
#    volumes:
 #     - "/home/student/a2StarterCode/testStarter/docker/play:/play"
    ports:
      - "4000:80"
    networks:
      - vote2022net
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    networks:
      - vote2022net
  redis-master:
    image: redis
    ports:
      - "6379:6379"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - "/home/student/redisData:/data"  
    networks:
      - vote2022net 

  redis-slave:
    image: redis
    ports:
      - "6380:6379"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
        max_replicas_per_node: 1
    command: redis-server --bind 0.0.0.0 --port 6380 --replicaof redis-master 6379 --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - vote2022net

networks:
  vote2022net:


